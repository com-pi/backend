plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
}

ext {
	springCloudVersion = '2023.0.1'
	dockerRepo = 'utopiandrmer'
	projectComP = 'comppi'
}

bootJar {
	enabled = false
}

jar {
	enabled = false
}

bootBuildImage {
	enabled = false
}

subprojects {
	group = 'com.comppi'

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	// 모듈 공통 의존성
	dependencies {
		// lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// spring boot 기본 설정
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		// actuator
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	test {
		useJUnitPlatform()
	}

	wrapper {
		gradleVersion = '8.7'
	}

	jar {
		enabled = false
	}

	tasks.register('cleanOut', Delete) {
		delete "${projectDir}/out"
	}

	tasks.register('buildDockerImage') {
		def tag = findProperty('tag')
		if (tag == null || tag.trim().isEmpty()) {
			throw new GradleException("이미지 태그 설정이 필요합니다. -Ptag 옵션을 추가하여 빌드")
		}

		doFirst {
			tasks.named('bootBuildImage').configure {
				enabled = true // ensure the task is enabled
				imageName = "${dockerRepo}/${projectComP}-${project.name}:${tag}"
				builder = 'paketobuildpacks/builder:base'
			}
		}

		finalizedBy tasks.named('bootBuildImage') // Ensure bootBuildImage runs after this task
	}
}